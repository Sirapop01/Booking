const mongoose = require("mongoose");
const Payment = require("../models/Payment");
const Arena = require("../models/Arena");

// ‚úÖ ‡∏î‡∏∂‡∏á‡∏™‡∏ô‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏™‡∏ô‡∏≤‡∏°
exports.getStadiumsByOwner = async (req, res) => {
  try {
    const { ownerId } = req.params;
    const stadiums = await Arena.find({ businessOwnerId: ownerId });

    if (!stadiums.length) {
      return res.status(404).json({ message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏ô‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ" });
    }

    res.status(200).json(stadiums);
  } catch (error) {
    console.error("‚ùå Error fetching stadiums:", error);
    res.status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ô‡∏≤‡∏°" });
  }
};

// ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• payment ‡∏Ç‡∏≠‡∏á‡∏™‡∏ô‡∏≤‡∏°‡∏ô‡∏±‡πâ‡∏ô (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ confirmed ‡∏´‡∏£‡∏∑‡∏≠ paid)
exports.getLedgerByArena = async (req, res) => {
  try {
    const { arenaId } = req.params;
    console.log("üìå Received arenaId:", arenaId); // ‚úÖ Debugging log

    const ledgerData = await Payment.find({
      stadiumId: new mongoose.Types.ObjectId(arenaId),
      status: { $in: ["confirmed", "paid"] }, // ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö "confirmed" ‡πÅ‡∏•‡∏∞ "paid"
    });

    if (!ledgerData || ledgerData.length === 0) {
      return res.status(404).json({ message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Payment" });
    }

    res.status(200).json(ledgerData);
  } catch (error) {
    console.error("‚ùå Error fetching ledger data:", error);
    res.status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö" });
  }
};


