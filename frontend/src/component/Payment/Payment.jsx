import React, { useState, useEffect } from "react";
import axios from "axios";
import "./Payment.css";


const Payment = () => {
    const [paymentData, setPaymentData] = useState(null);
    const [loading, setLoading] = useState(true);
    const [transferTime, setTransferTime] = useState("");
    const [amount, setAmount] = useState("");
    const [slipImage, setSlipImage] = useState(null);

    useEffect(() => {
        const fetchPaymentDetails = async () => {
            try {
                const token = localStorage.getItem("token") || sessionStorage.getItem("token");
                if (!token) {
                    console.log("‚ùå No token found");
                    return;
                }

                const response = await axios.get("http://localhost:4000/api/payments/pending", {
                    headers: { Authorization: `Bearer ${token}` }
                });

                setPaymentData(response.data);
                console.log("‚úÖ Payment Data:", response.data);
            } catch (error) {
                console.error("‚ùå Error fetching payment details:", error);
            } finally {
                setLoading(false); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
            }
        };

        fetchPaymentDetails();
    }, []);

    const handleFileUpload = (event) => {
        setSlipImage(URL.createObjectURL(event.target.files[0]));
    };

    if (loading) {
        return <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>;
    }

    if (!paymentData || !paymentData.booking) {
        return <p>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</p>;
    }

    const { arenaInfo, booking, stadiumInfo, bankInfo } = paymentData;


    return (
        <div className="payment-container">
            {/* üîπ ‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏ô: ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏ô‡∏≤‡∏° */}
            <div className="payment-top">
                <div className="image-top">
                    <div className="arena-details">
                        <img src={arenaInfo?.[0].images?.[0]} alt="‡∏™‡∏ô‡∏≤‡∏°‡∏Å‡∏µ‡∏¨‡∏≤" className="arena-image" />
                    </div>
                </div>
                <div className="info-top">
                    <div className="arena-details">
                        <h2>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á #{booking?.sessionId || "N/A"}</h2>
                        <p>üìç {arenaInfo?.[0]?.fieldName || "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ô‡∏≤‡∏°"}</p>
                        <p>üìç {stadiumInfo?.map((stadium) => stadium.name).join(", ") || "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ô‡∏≤‡∏°"}</p>
                        <p>üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {new Date(booking?.details?.[0]?.bookingDate || new Date()).toLocaleDateString()}</p>
                        {/* ‚úÖ ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á */}
                        <div>
                            <p>üïí ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á:</p>
                            <ul>
                                {booking?.details?.map((detail, index) => {
                                    // üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ substadium ‡∏ï‡∏≤‡∏° subStadiumId
                                    const matchedStadium = stadiumInfo?.find(stadium =>
                                        stadium._id.toString() === detail.subStadiumId.toString()
                                    );

                                    return (
                                        <li key={index}>
                                            <strong>{matchedStadium?.name || "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ô‡∏≤‡∏°"}</strong>:
                                            {detail.startTime} - {detail.endTime} ({detail.duration} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)
                                        </li>
                                    );
                                })}
                            </ul>
                        </div>
                        <p className="price">üí∞ ‡∏ø{booking?.totalPrice || "N/A"}</p>
                    </div>
                </div>
            </div>

            {/* üîπ ‡∏™‡πà‡∏ß‡∏ô‡∏•‡πà‡∏≤‡∏á: ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô */}
            <div className="payment-bottom">
                {/* ‚úÖ QR Code */}
                <div className="qr-section">
                    <h3>‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</h3>
                    <img src={bankInfo?.images.qrCode} alt="QR Code" className="qr-code" />
                </div>

                {/* ‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£ */}
                <div className="bank-info">
                    <h3>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£</h3>
                    <p>üè¶ ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£: <strong>{bankInfo?.bank || "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"}</strong></p>
                    <p>üí≥ ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: <strong>{bankInfo?.accountNumber || "N/A"}</strong></p>
                    <p>üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: {bankInfo?.accountName || "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"}</p>
                    <p className="payment-timer">‚è≥ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô {new Date(booking?.expiresAt || new Date()).toLocaleTimeString()}</p>
                </div>

                {/* ‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô */}
                <div className="slip-upload">
                    <h3>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô</h3>
                    <label>‚è≥ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</label>
                    <input
                        type="time"
                        value={transferTime}
                        onChange={(e) => setTransferTime(e.target.value)}
                    />

                    <label>üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</label>
                    <input
                        type="number"
                        value={amount}
                        onChange={(e) => setAmount(e.target.value)}
                        placeholder="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÇ‡∏≠‡∏ô"
                    />

                    <label>üìé ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</label>
                    <input type="file" accept="image/*" onChange={handleFileUpload} />

                    {slipImage && <img src={slipImage} alt="Slip Preview" className="slip-preview" />}
                </div>

                {/* üîò ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô / ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å */}
                <div className="payment-actions">
                    <button className="confirm-payment">‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô</button>
                    <button className="cancel-booking">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</button>
                </div>
            </div>
        </div>
    );
};

export default Payment;
