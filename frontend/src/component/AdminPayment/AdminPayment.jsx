import React, { useState, useEffect } from "react";
import axios from "axios";
import "./AdminPayment.css";
import homeLogo from "../assets/logoalt.png";
import closeIcon from "../assets/icons/close.png";

const AdminPayment = () => {
  const [users, setUsers] = useState([]);
  const [selectedUser, setSelectedUser] = useState(null);
  const [transactions, setTransactions] = useState([]);
  const [showSlipPopup, setShowSlipPopup] = useState(false);
  const [slipImageUrl, setSlipImageUrl] = useState("");
  const [showRejectPopup, setShowRejectPopup] = useState(false);
  const [rejectReason, setRejectReason] = useState("");

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
  useEffect(() => {
    axios.get("http://localhost:4000/api/verify-payments/payment-users")
      .then(response => {
        setUsers(response.data);
        if (response.data.length > 0) {
          setSelectedUser(response.data[0]);
        }
      })
      .catch(error => console.error("Error fetching users:", error));
  }, []);

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  useEffect(() => {
    if (selectedUser) {
      axios.get(`http://localhost:4000/api/payment-history/${selectedUser._id}`)
        .then(response => setTransactions(response.data))
        .catch(error => console.error("Error fetching transactions:", error));

      // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏™‡∏•‡∏¥‡∏õ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
      axios.get(`http://localhost:4000/api/payment-slip/${selectedUser._id}`)
        .then(response => setSlipImageUrl(response.data.slipImageUrl))
        .catch(error => console.error("Error fetching slip image:", error));
    }
  }, [selectedUser]);

  // ‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°
  const calculateTotal = () => {
    return transactions.reduce((total, transaction) => total + transaction.total, 0);
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î Pop-up ‡∏™‡∏•‡∏¥‡∏õ
  const openSlipPopup = () => {
    setShowSlipPopup(true);
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î Pop-up ‡∏™‡∏•‡∏¥‡∏õ
  const closeSlipPopup = () => {
    setShowSlipPopup(false);
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î Pop-up Reject
  const openRejectPopup = () => {
    setShowRejectPopup(true);
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î Pop-up Reject
  const closeRejectPopup = () => {
    setShowRejectPopup(false);
    setRejectReason("");
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô (Reject)
  const confirmReject = () => {
    if (!rejectReason.trim()) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô ‚ùå");
      return;
    }

    axios.post(`http://localhost:4000/api/reject-payment/${selectedUser._id}`, { reason: rejectReason })
      .then(() => {
        alert(`‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á ${selectedUser.username} ‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÅ‡∏•‡πâ‡∏ß ‚úÖ`);
        closeRejectPopup(); // ‡∏õ‡∏¥‡∏î Pop-up
      })
      .catch(error => console.error("Error rejecting payment:", error));
  };

  return (
    <div className="admin-payment-container">
      {/* üîô ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤ Home */}
      <a href="/" className="home-button">
        <img src={homeLogo} alt="Home Logo" className="home-logo" />
      </a>

      <h1 className="page-title3">‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô</h1>

      <div className="payment-content">
        {/* üìú ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ */}
        <div className="user-list-container3">
          <div className="user-list3">
            <div className="list-header3">‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</div>
            {users.map((user) => (
              <div
                key={user._id}
                className={`user-item3 ${selectedUser?._id === user._id ? "selected" : ""}`}
                onClick={() => setSelectedUser(user)}
              >
                {user.username}
              </div>
            ))}
          </div>
        </div>

        {/* üìä ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô */}
        <div className="payment-table-container3">
          <div className="payment-table3">
            <div className="table-header3">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</div>
            <table>
              <thead>
                <tr>
                  <th>‡∏ß‡∏±‡∏ô/‡πÄ‡∏ß‡∏•‡∏≤</th>
                  <th>‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏ô‡∏≤‡∏°</th>
                  <th>‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô</th>
                  <th>‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏Å‡πá‡∏ö 10%</th>
                  <th>‡∏£‡∏ß‡∏°</th>
                </tr>
              </thead>
              <tbody>
                {transactions.length === 0 ? (
                  <tr><td colSpan="6" className="no-data">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</td></tr>
                ) : (
                  transactions.map((transaction, index) => (
                    <tr key={index}>
                      <td>{transaction.dateTime}</td>
                      <td>{transaction.item}</td>
                      <td>{transaction.amount} $</td>
                      <td>{transaction.tax} $</td>
                      <td>{transaction.total} $</td>
                    </tr>
                  ))
                )}
              </tbody>
            </table>

            {/* üí≤ ‡∏£‡∏ß‡∏°‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î */}
            <div className="total-box2">
              <strong>Total: {calculateTotal()} $</strong>
            </div>

            {/* üõ† ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ */}
            <div className="action-buttons3">
              <button className="reject-button" onClick={openRejectPopup}>Reject</button>
              <button className="confirm-button3">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô</button>
              <button className="blacklist-button">Blacklist</button>
              <button className="slip-button" onClick={openSlipPopup}>‡∏™‡∏•‡∏¥‡∏õ</button>
            </div>
          </div>
        </div>
      </div>

      {/* üñº Pop-up ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏•‡∏¥‡∏õ */}
      {showSlipPopup && (
        <div className="slip-popup">
          <div className="slip-popup-content">
            <img src={closeIcon} alt="Close" className="close-slip-popup" onClick={closeSlipPopup} />
            <h2>‡∏™‡∏•‡∏¥‡∏õ</h2>
            {slipImageUrl ? <img src={slipImageUrl} alt="Slip" className="slip-image" /> : <p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏•‡∏¥‡∏õ</p>}
          </div>
        </div>
      )}

      {/* üö´ Pop-up ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô */}
      {showRejectPopup && (
        <div className="reject-popup">
          <div className="reject-popup-content">
            <img src={closeIcon} alt="Close" className="close-reject-popup" onClick={closeRejectPopup} />
            <h2>‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</h2>
            <textarea
              className="reject-reason-input"
              placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏..."
              value={rejectReason}
              onChange={(e) => setRejectReason(e.target.value)}
            />
            <div className="popup-buttons3">
              <button className="confirm-reject" onClick={confirmReject}>‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô</button>
              <button className="cancel-reject" onClick={closeRejectPopup}>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default AdminPayment;
