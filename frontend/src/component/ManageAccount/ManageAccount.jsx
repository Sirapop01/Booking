import { useNavigate } from "react-router-dom"; // ‚úÖ ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤
import React, { useState, useEffect } from "react";
import axios from "axios";
import "./ManageAccount.css";
import homeLogo from "../assets/logoalt.png";
import arrowForwardIcon from "../assets/icons/arrow-ios-forward.png";
import arrowBackwardIcon from "../assets/icons/arrow-ios-back.png";

const ManageAccount = () => {
  const [users, setUsers] = useState([]);
  const [selectedUser, setSelectedUser] = useState(null);
  const [isOwnerMode, setIsOwnerMode] = useState(false);
  const [showDeletePopup, setShowDeletePopup] = useState(false);
  const [deleteInput, setDeleteInput] = useState("");
  const [stadiums, setStadiums] = useState([]); // ‚úÖ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏≤‡∏°‡∏Ç‡∏≠‡∏á Owner
  const navigate = useNavigate(); // ‚úÖ ‡πÉ‡∏ä‡πâ Hook ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà


  // üìå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏à‡∏≤‡∏Å API
  useEffect(() => {
    const apiUrl = isOwnerMode
  ? "http://localhost:4000/api/manage-account/owners"  // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏™‡∏ô‡∏≤‡∏°
  : "http://localhost:4000/api/manage-account/users";  // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ

    axios.get(apiUrl)
      .then(response => {
        setUsers(response.data);
        if (response.data.length > 0) {
          setSelectedUser(response.data[0]); // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÅ‡∏£‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        }
      })
      .catch(error => console.error("Error fetching users:", error));
  }, [isOwnerMode]);

  // üìå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ô‡∏≤‡∏°‡∏Ç‡∏≠‡∏á Owner ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
useEffect(() => {
  if (!isOwnerMode || !selectedUser) return;

  axios.get(`http://localhost:4000/api/manage-account/owners/stadiums/${selectedUser._id}`)
    .then(response => {
      setStadiums(response.data);
    })
    .catch(error => {
      console.error("‚ùå Error fetching stadiums:", error);
      setStadiums([]); // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
    });
}, [selectedUser, isOwnerMode]); // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Owner

  // üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ (‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô)
  const confirmDeleteUser = () => {
    if (deleteInput === "Delete") {
      const deleteUrl = isOwnerMode
  ? `http://localhost:4000/api/manage-account/owners/${selectedUser._id}`
  : `http://localhost:4000/api/manage-account/users/${selectedUser._id}`;

      axios.delete(deleteUrl)
        .then(() => {
          setUsers(users.filter(user => user._id !== selectedUser._id));
          setSelectedUser(null);
          setShowDeletePopup(false);
          setDeleteInput(""); // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤ input
        })
        .catch(error => console.error("Error deleting user:", error));
    } else {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå Delete ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
    }
  };

  // üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å Blacklist
  const toggleBlacklist = (id) => {
    const blacklistUrl = isOwnerMode
  ? `http://localhost:4000/api/manage-account/owners/blacklist/${id}`
  : `http://localhost:4000/api/manage-account/users/blacklist/${id}`;


    axios.put(blacklistUrl)
      .then(() => {
        setUsers(users.map(user =>
          user._id === id ? { ...user, status: user.status === "blacklisted" ? "active" : "blacklisted" } : user
        ));
        setSelectedUser(prevUser => prevUser && prevUser._id === id
          ? { ...prevUser, status: prevUser.status === "blacklisted" ? "active" : "blacklisted" }
          : prevUser
        );
      })
      .catch(error => console.error("Error toggling blacklist:", error));
  };

  return (
    <div className="manage-account-container">
      {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤ Home */}
      <a href="/superadmin/dashboard" className="home-button">
        <img src={homeLogo} alt="Home Logo" className="home-logo" />
      </a>

      <h1 className="page-title">‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ</h1>

      <div className="account-content">
        {/* üìå Container ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö User List */}
        <div className="user-list-container">
        <div className="list-header" onClick={() => setIsOwnerMode(!isOwnerMode)}>
            <span>{isOwnerMode ? "‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏™‡∏ô‡∏≤‡∏°" : "‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"}</span>
            <img
              src={isOwnerMode ? arrowBackwardIcon : arrowForwardIcon} 
              alt="Switch Mode"
              className="header-forward-icon"
            />
          </div>
          <div className="user-items">
            {users.map((user) => (
              <div
                key={user._id}
                className={`user-item ${selectedUser?._id === user._id ? "selected" : ""} ${user.status === "blacklisted" ? "blacklisted" : ""}`}
                onClick={() => setSelectedUser(user)}
              >
                {user.firstName} {user.lastName}
              </div>
            ))}
          </div>
        </div>

        {/* üìå Container ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö User Details */}
{selectedUser && (
  <div className="user-details-container">
    <div className="user-header">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</div>

    {/* ‚úÖ ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå (‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ) */}
    {!isOwnerMode && (
      <div className="profile-image">
        <img src={selectedUser.profileImage || "https://via.placeholder.com/100"} alt="User Profile" />
      </div>
    )}

    {/* ‚úÖ ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß" */}
    <div className="details-header">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</div>

    {/* ‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ö‡∏ö 3 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå */}
    <div className="info-section">
      <p><strong>‡∏ä‡∏∑‡πà‡∏≠:</strong> {selectedUser.firstName}</p>
      <p><strong>‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:</strong> {selectedUser.lastName}</p>

      {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏û‡∏® ‡πÅ‡∏•‡∏∞ ‡∏™‡∏ô‡πÉ‡∏à‡∏Å‡∏µ‡∏¨‡∏≤ ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ */}
      {!isOwnerMode && <p><strong>‡πÄ‡∏û‡∏®:</strong> {selectedUser.gender || "-"}</p>}
      <p><strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå:</strong> {selectedUser.phoneNumber}</p>
      <p><strong>‡∏≠‡∏µ‡πÄ‡∏°‡∏•:</strong> {selectedUser.email}</p>

      {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ */}
      {!isOwnerMode && <p><strong>‡∏™‡∏ô‡πÉ‡∏à‡∏Å‡∏µ‡∏¨‡∏≤:</strong> {selectedUser.interestedSports || "-"}</p>}

      {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ */}
      {!isOwnerMode && (
        <p><strong>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</strong> {`${selectedUser.subdistrict || "-"}, ${selectedUser.district || "-"}, ${selectedUser.province || "-"}`}</p>
      )}

      {/* ‚úÖ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ö‡∏±‡∏ç‡∏ä‡∏µ */}
      <p><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> 
        <span className={selectedUser.status === "blacklisted" ? "blacklisted-text" : "active-text"}>
          {selectedUser.status}
        </span>
      </p>

      {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏≤‡∏°‡∏Ç‡∏≠‡∏á Owner */}
      {isOwnerMode && (
          <div className="stadium-list-container">
            <h2 className="stadium-list-title">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</h2>
            {stadiums.length > 0 ? (
              stadiums.map(stadium => (
                <div key={stadium._id} className="stadium-item">
                  <p><strong>‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ô‡∏≤‡∏°:</strong> {stadium.fieldName}</p>
                  <p><strong>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠:</strong> {stadium.phone}</p>
                  <p><strong>‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡∏¥‡∏î-‡∏õ‡∏¥‡∏î:</strong> {stadium.startTime} - {stadium.endTime}</p>
                  <p><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> {stadium.open ? "‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£" : "‡∏õ‡∏¥‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß"}</p>
                </div>
              ))
            ) : (
              <p className="no-stadium">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏ô‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</p>
            )}
          </div>
        )}
    </div>

    {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ */}
    <div className="action-buttons">
      <button className="delete-button3" onClick={() => setShowDeletePopup(true)}>‡∏•‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ</button>
      <button className={`blacklist-button ${selectedUser.status === "blacklisted" ? "remove-blacklist" : ""}`} 
        onClick={() => toggleBlacklist(selectedUser._id)}>
        {selectedUser.status === "blacklisted" ? "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å Blacklist" : "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô Blacklist"}
      </button>
    </div>
    {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á */}
  {!isOwnerMode && (
    <button 
      className="history-button" 
      onClick={() => navigate(`/historybooking/${selectedUser._id}`)}
    >
      ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
    </button>
  )}
  </div>
)}
      </div>

      {/* ‚úÖ Pop-up ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ */}
      {showDeletePopup && (
        <div className="delete-popup2">
          <div className="popup-content2">
            <h2>‡∏•‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ</h2>
            <p>‡πÇ‡∏õ‡∏£‡∏î‡∏û‡∏¥‡∏°‡∏û‡πå "Delete" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô</p>
            <input
              type="text"
              value={deleteInput}
              onChange={(e) => setDeleteInput(e.target.value)}
              className="delete-input2"
            />
            <div className="popup-buttons2">
              <button className="confirm-delete2" onClick={confirmDeleteUser}>‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô</button>
              <button className="cancel-delete2" onClick={() => setShowDeletePopup(false)}>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default ManageAccount;
