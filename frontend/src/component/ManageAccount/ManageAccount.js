import React, { useState, useEffect } from "react";
import axios from "axios";
import "./ManageAccount.css";
import homeLogo from "../assets/logoalt.png";

const ManageAccount = () => {
  const [users, setUsers] = useState([]);
  const [selectedUser, setSelectedUser] = useState(null);

  // üìå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏à‡∏≤‡∏Å API
  useEffect(() => {
    axios.get("http://localhost:4000/api/manage-account")
      .then(response => {
        setUsers(response.data);
        if (response.data.length > 0) {
          setSelectedUser(response.data[0]); // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÅ‡∏£‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        }
      })
      .catch(error => console.error("Error fetching users:", error));
  }, []);

  // üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ
  const deleteUser = (id) => {
    if (window.confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ?")) {
      axios.delete(`http://localhost:4000/api/manage-account/${id}`)
        .then(() => {
          setUsers(users.filter(user => user._id !== id));
          setSelectedUser(null);
        })
        .catch(error => console.error("Error deleting user:", error));
    }
  };

  // üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å Blacklist
  const toggleBlacklist = (id) => {
    axios.put(`http://localhost:4000/api/manage-account/blacklist/${id}`)
      .then(() => {
        setUsers(users.map(user =>
          user._id === id ? { ...user, status: user.status === "blacklisted" ? "active" : "blacklisted" } : user
        ));
        setSelectedUser(prevUser => prevUser && prevUser._id === id
          ? { ...prevUser, status: prevUser.status === "blacklisted" ? "active" : "blacklisted" }
          : prevUser
        );
      })
      .catch(error => console.error("Error toggling blacklist:", error));
  };

  return (
    <div className="manage-account-container">
      {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤ Home */}
          <a href="/" className="home-button">
            <img src={homeLogo} alt="Home Logo" className="home-logo" />
          </a>

      <h1 className="page-title">‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ</h1>

      <div className="account-content">
        {/* üìå Container ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö User List */}
        <div className="user-list-container">
          <div className="list-header">‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</div>
          <div className="user-items">
            {users.map((user) => (
              <div
                key={user._id}
                className={`user-item ${selectedUser?._id === user._id ? "selected" : ""} ${user.status === "blacklisted" ? "blacklisted" : ""}`}
                onClick={() => setSelectedUser(user)}
              >
                {user.firstName} {user.lastName}
              </div>
            ))}
          </div>
        </div>

        {/* üìå Container ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö User Details */}
          {selectedUser && (
            <div className="user-details-container">
              <div className="user-header">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</div>
              {/* ‚úÖ ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå */}
              <div className="profile-image">
                <img src={selectedUser.profileImage || "https://via.placeholder.com/100"} alt="User Profile" />
              </div>

              {/* ‚úÖ ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß" */}
              <div className="details-header">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</div>

              {/* ‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ö‡∏ö 3 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå */}
              <div className="info-section">
                <p><strong>‡∏ä‡∏∑‡πà‡∏≠:</strong> {selectedUser.firstName}</p>
                <p><strong>‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:</strong> {selectedUser.lastName}</p>
                <p><strong>‡πÄ‡∏û‡∏®:</strong> {selectedUser.gender || "-"}</p>
                <p><strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå:</strong> {selectedUser.phoneNumber}</p>
                <p><strong>‡∏≠‡∏µ‡πÄ‡∏°‡∏•:</strong> {selectedUser.email}</p>
                <p><strong>‡∏™‡∏ô‡πÉ‡∏à‡∏Å‡∏µ‡∏¨‡∏≤:</strong> {selectedUser.interestedSports || "-"}</p>
                <p><strong>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</strong> {`${selectedUser.subdistrict}, ${selectedUser.district}, ${selectedUser.province}`}</p>
                <p><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> 
                  <span className={selectedUser.status === "blacklisted" ? "blacklisted-text" : "active-text"}>
                    {selectedUser.status}
                  </span>
                </p>
              </div>

              {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ */}
              <div className="action-buttons">
                <button className="delete-button3" onClick={() => deleteUser(selectedUser._id)}>‡∏•‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ</button>
                <button className={`blacklist-button ${selectedUser.status === "blacklisted" ? "remove-blacklist" : ""}`} 
                  onClick={() => toggleBlacklist(selectedUser._id)}>
                  {selectedUser.status === "blacklisted" ? "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å Blacklist" : "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô Blacklist"}
                </button>
              </div>
            </div>
          )}
      </div>
    </div>
  );
};

export default ManageAccount;
