import React, { useState, useEffect } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";  // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤
import "./AdminOwnersLedger.css";
import NavbarAdminLedger from "../NavbarAdminLedger/NavbarAdminLedger";

const AdminOwnersLedger = () => {
  const [owners, setOwners] = useState([]);
  const [searchTerm, setSearchTerm] = useState("");
  const navigate = useNavigate();  // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤

  useEffect(() => {
    axios.get("http://localhost:4000/api/businessOwners") // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö API ‡πÉ‡∏´‡∏°‡πà
      .then(response => {
        console.log("üìå Business Owners Data:", response.data);
        setOwners(response.data);
      })
      .catch(error => {
        console.error("‚ùå Error fetching business owners:", error);
      });
  }, []);
    

  const handleCheckLedger = (ownerId) => {
    navigate(`/OwnerLedgerDetail/${ownerId}`); // ‚úÖ ‡∏™‡πà‡∏á ownerId ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ OwnerLedgerDetail
  };

  const filteredOwners = owners.filter(owner =>
    `${owner.firstName || ""} ${owner.lastName || ""}`.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className="admin-stadium-container">
      <NavbarAdminLedger /> {/* ‚úÖ ‡πÉ‡∏ä‡πâ Navbar ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà */}

      {/* üîé ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏™‡∏ô‡∏≤‡∏° */}
      <div className="search-bar">
        <input
          type="text"
          placeholder="üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏™‡∏ô‡∏≤‡∏°"
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
        />
      </div>

      {/* üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ */}
      <div className="table-container">
        <div className="table-header">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏™‡∏ô‡∏≤‡∏°</div>
        {filteredOwners.length > 0 ? (
          filteredOwners.map((owner) => (
            <div key={owner._id} className="table-row">
              <span className="owner-name">
                {owner.firstName && owner.lastName
                  ? `${owner.firstName} ${owner.lastName}`
                  : "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏∑‡πà‡∏≠"}
              </span>
              <button className="check-button" onClick={() => handleCheckLedger(owner._id)}>
                ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
              </button>
            </div>
          ))
        ) : (
          <div className="no-results">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</div>
        )}
      </div>
    </div>
  );
};

export default AdminOwnersLedger;
